device_type: b0-edgeq-raptor2


job_name: "   @Board219 Test File"


tags:
- Board219


notify:
    recipients:
    - to:
        method: email
        user: admin
    criteria:
      status: finished
    verbosity: verbose
    compare:
       blacklist: [lava]


timeouts:
  job:
    minutes: 2990
  action:
    minutes: 2990
  connection:
    minutes: 2990
priority: 5
visibility: public


actions:


########
#Linux Boot after flash boot setup
########

- boot:
   namespace: linux1
   method: minimal
   reset: true
   auto_login:
     login_prompt: 'login:'
     username: root
   timeout:
    minutes: 20
   prompts:
   - 'Password:'




- test:
   namespace: linux1
   timeout:
     minutes: 10
   interactive:
   - name: basic_linux_commands_emmcboot
     prompts: ["Password:","raptor2 login:","#"]
     echo: discard
     script:
     - command: root
#        name: basic_linux_commands



- test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: basic_linux_commands
     prompts: ["# "]
     echo: discard   
     script:
     - command: ls -ltr;pwd; df -h; ls -l /dev | grep -i mmc;
#        name: lstest
       successes:
       - message: "total"
       failures:
       - message: "TIMEOUT"
#          exception: InfrastructureError
         error: "ls failed"
 
#######
## Till above do not distrub
#######

- test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: basic_testcase_adding
     prompts: ["# "]
     echo: discard   
     script:
     - command: uname
       successes:
       - message: "Linux"
       failures:
       - message: "TIMEOUT"
         error: "uname failed"
 

 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_du_gcore_test
     prompts: ["# "]
     echo: discard   
     script:
     - command: coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_du | grep -v grep | awk '{print $2}');gcore $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"



 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_cu_gcore_test
     prompts: ["# "]
     echo: discard   
     script:
     - command:coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_cu | grep -v grep | awk '{print $2}');gcore $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"

 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_du_kill11_test
     prompts: ["# "]
     echo: discard   
     script:
     - command: coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_du | grep -v grep | awk '{print $2}');sudo kill -11 $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"



 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_cu_kill11_test
     prompts: ["# "]
     echo: discard   
     script:
     - command:coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_cu | grep -v grep | awk '{print $2}');sudo kill -11 $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"


 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_du_kill7_test
     prompts: ["# "]
     echo: discard   
     script:
     - command: coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_du | grep -v grep | awk '{print $2}');sudo kill -7 $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"



 - test:
   namespace: linux1
   timeout:
     minutes: 4
   interactive:
   - name: coredump_cu_kill7_test
     prompts: ["# "]
     echo: discard   
     script:
     - command:coredump_folder="/coredump/";pid=$(ps -ef | grep gnb_cu | grep -v grep | awk '{print $2}');sudo kill -7 $pid;for pid in $pid
do
    core_dump_file="core.$pid"

    if [ -e "$core_dump_file" ]; then
        echo "Core dump file for PID $pid exists: $core_dump_file"
    else
        echo "Core dump file for PID $pid does not exist."
    fi
done; gdb /cu/bin/gnb_cu /coredump/core.$pid; bt;info threads;
       failures:
       - message: "TIMEOUT"
         error: "uname failed"